buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
        classpath 'com.github.triplet.gradle:play-publisher:1.0.2'
    }
}

repositories {
    maven {
        url "http://repository.jetbrains.com/all"
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'kotlin-android'
apply plugin: 'play'

android {
    compileSdkVersion 22
    buildToolsVersion '21.1.2'

    defaultConfig {
        applicationId 'org.bspeice.minimalbible'
        minSdkVersion 8
        targetSdkVersion 22
        versionName '0.7'
        versionCode System.getenv("TRAVIS_BUILD_NUMBER")?.toInteger() ?: 0
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'LICENSE.txt'
        exclude 'META-INF/INDEX.LIST'
        exclude 'LICENSE'
        exclude 'NOTICE'
        exclude 'asm-license.txt'
    }

    signingConfigs {
        release {
            storeFile file('src/main/play/MinimalBible.jks')
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias 'minimalbible signing key'
            keyPassword System.getenv("KEYSTORE_PASSWORD")
        }
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
}

play {
    serviceAccountEmail = System.getenv("SERVICE_ACCOUNT_EMAIL")
    pk12File = file('src/main/play/play_api.p12')
}

dependencies {
    compile project(path: ':jsword-minimalbible', configuration: 'buildJSword')

    compile 'com.google.dagger:dagger:+'
    apt 'com.google.dagger:dagger-compiler:+'
    provided 'javax.annotation:javax.annotation-api:1.2'

    compile 'de.devland.esperandro:esperandro-api:+'
    apt 'de.devland.esperandro:esperandro:+'

    compile 'com.jakewharton:butterknife:6.1.0'
    compile 'com.readystatesoftware.systembartint:systembartint:+'
    compile 'com.netflix.rxjava:rxjava-android:+'
    compile 'com.android.support:appcompat-v7:+'
    compile 'com.android.support:recyclerview-v7:+'
    compile 'com.android.support:cardview-v7:+'
    compile 'org.apache.commons:commons-lang3:+'
    compile 'com.orhanobut:logger:+'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Instrumentation Test dependencies
    androidTestCompile 'com.jayway.awaitility:awaitility:+'
    androidTestCompile 'org.mockito:mockito-core:+'

    // Unit Test dependencies
    testCompile 'junit:junit:4.12'
    testCompile 'com.jayway.awaitility:awaitility:+'
    testCompile 'org.mockito:mockito-core:+'
    testCompile 'org.jetbrains.spek:spek:+'

    // Email debug reports if I crash...
    debugCompile('ch.acra:acra:+') {
        exclude module: 'json'
    }
}